apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "service.fullname" . }}
  labels:
    app: {{ include "service.name" . }}
    service: {{ template "service.fullname" . }}
    managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ include "service.name" . }}
      service: {{ template "service.fullname" . }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: {{ include "service.name" . }}
        service: {{ template "service.fullname" . }}
    spec:
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}
        env:
        - name: AZP_AGENT_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: AZP_URL
          value: {{ .Values.pipelines.url | quote }}
        - name: AZP_TOKEN
          value: {{ .Values.pipelines.pat | quote }}
        - name: AZP_POOL
          value: {{ .Values.pipelines.pool | quote }}
        volumeMounts:
        - name: docker-socket
          mountPath: /var/run
      - image: docker:dind
        name: "{{ .Chart.Name }}-daemon"
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph-storage
          mountPath: /var/lib/docker
        - name: docker-socket
          mountPath: /var/run
      volumes:
      - name: docker-graph-storage
        emptyDir: {}
      - name: docker-socket
        emptyDir: {}
